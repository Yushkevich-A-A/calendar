{"version":3,"sources":["components/Calendar/CalendarInformation/CalendarInformation.js","components/Calendar/WeekTable/WeekColgroup/WeekColgroup.js","components/Calendar/WeekTable/WeekdayName/WeekdayName.js","components/Calendar/WeekTable/WeekTable.js","components/Calendar/Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["moment","local","CalendarInformation","props","date","weekDay","format","replace","toUpperCase","currentMonth","className","split","WeekColgroup","arrayDay","map","item","index","v4","WeekdayName","nameDayWeek","scope","title","locale","weekday","WeekTable","weekdays","month","currentDate","firstDayInMonth","startOf","offsetToPreviouseDays","counterCalendar","subtract","amountWeeks","startMonth","daysOfMOnth","daysInMonth","arrAmountWeek","offsetToStartWeek","Math","floor","i","push","getAmountWeeks","cloneDate","clone","add","Calendar","now","Date","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66814f02.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/ru';\r\n\r\nmoment().local('ru');\r\n\r\nfunction CalendarInformation(props) {\r\n    const { date } = props;\r\n\r\n    let  weekDay = moment(date).format('dddd');\r\n    weekDay = weekDay.replace(weekDay[0], weekDay[0].toUpperCase());\r\n\r\n    let currentMonth = moment(date).format('MMMM');\r\n    currentMonth = currentMonth.replace(currentMonth[0], currentMonth[0].toUpperCase());\r\n\r\n    return ( \r\n        <>\r\n            <div className=\"ui-datepicker-material-header\">\r\n                <div className=\"ui-datepicker-material-day\">{weekDay}</div>\r\n                <div className=\"ui-datepicker-material-date\">\r\n                <div className=\"ui-datepicker-material-day-num\">{moment(date).format('D')}</div>\r\n                <div className=\"ui-datepicker-material-month\">{moment(date).format('D MMMM').split(' ')[1]}</div>\r\n                <div className=\"ui-datepicker-material-year\">{moment(date).format('YYYY')}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"ui-datepicker-header\">\r\n                <div className=\"ui-datepicker-title\">\r\n                <span className=\"ui-datepicker-month\">{currentMonth}</span>&nbsp;<span className=\"ui-datepicker-year\">{moment(date).format('YYYY')}</span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CalendarInformation;","import React from \"react\";\r\nimport { v4 } from 'uuid';\r\n\r\nfunction WeekColgroup(props) {\r\n    const { arrayDay } = props;\r\n\r\n    return(\r\n        <colgroup>\r\n            {arrayDay.map( (item, index) => {\r\n                return (index < 5) ? \r\n                        <col key={v4()}/> : \r\n                        <col key={v4()} className=\"ui-datepicker-week-end\"/>\r\n                })}\r\n        </colgroup>  \r\n    )\r\n}\r\n\r\nexport default WeekColgroup;","import React from \"react\";\r\nimport { v4 } from 'uuid';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nmoment().local('ru');\r\n\r\nfunction WeekdayName(props) {\r\n    const { arrayDay } = props;\r\n    return(\r\n        <tr>\r\n        {\r\n        arrayDay.map( (item, index) => {\r\n            const nameDayWeek = item.replace(item[0], item[0].toUpperCase());\r\n            return (\r\n                <th scope='col' key={v4()} title={nameDayWeek}>\r\n                {moment().locale('ru').weekday(index).format('dd')}\r\n                </th>)\r\n            })\r\n        }\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default WeekdayName;","import React from 'react';\r\nimport { v4 } from 'uuid';\r\nimport WeekColgroup from './WeekColgroup/WeekColgroup';\r\nimport WeekdayName from './WeekdayName/WeekdayName';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nmoment().local('ru');\r\n\r\nfunction WeekTable(props) {\r\n    const { date } = props;\r\n\r\n    \r\n    const arrayDay = moment.weekdays(true);\r\n    const currentMonth = moment(date).month();\r\n    const currentDate = moment(date).date();\r\n    const firstDayInMonth = moment(date).startOf('month');\r\n    const offsetToPreviouseDays = firstDayInMonth.weekday();\r\n    let counterCalendar = firstDayInMonth.subtract( offsetToPreviouseDays,'d');\r\n    const amountWeeks = getAmountWeeks(date);\r\n\r\n    return (\r\n        <table className='ui-datepicker-calendar'>  \r\n        <WeekColgroup  arrayDay={arrayDay}/>\r\n        <thead>\r\n        <WeekdayName  arrayDay={arrayDay}/>\r\n        </thead>\r\n        <tbody>\r\n        {\r\n        amountWeeks.map(() => {\r\n            return (\r\n                <tr key={v4()}>\r\n                    {\r\n                    arrayDay.map(() => {\r\n                        const cloneDate = counterCalendar.clone();\r\n                        counterCalendar.add(1, 'd');\r\n                        return <td key={v4()} className={\r\n                                (cloneDate.month() !== currentMonth ? 'ui-datepicker-other-month':\r\n                                cloneDate.date() === currentDate ? 'ui-datepicker-today': null )\r\n                            }>{cloneDate.date()}</td>\r\n                        })\r\n                    }\r\n                </tr>\r\n            )\r\n        })\r\n        }\r\n        </tbody>\r\n    </table>\r\n    )\r\n}\r\n\r\nfunction getAmountWeeks(date) {\r\n    const startMonth = moment(date).startOf('month');\r\n    const daysOfMOnth = startMonth.daysInMonth();\r\n    let amountWeeks = 0;\r\n\r\n    const arrAmountWeek = [];\r\n\r\n    if (startMonth.weekday() !== 0) {\r\n        amountWeeks++;\r\n        const offsetToStartWeek = 7 - startMonth.weekday();\r\n            ((daysOfMOnth - offsetToStartWeek) / 7  % 1 === 0) ?\r\n            amountWeeks += (daysOfMOnth - offsetToStartWeek) / 7:\r\n            amountWeeks += (daysOfMOnth - offsetToStartWeek) / 7 + 1;\r\n    } else {\r\n            ((daysOfMOnth / 7)  % 1 === 0) ? \r\n            amountWeeks += daysOfMOnth / 7 : \r\n            amountWeeks += daysOfMOnth / 7 + 1;\r\n    };\r\n\r\n    amountWeeks = Math.floor(amountWeeks)\r\n\r\n    for(let i = 0; i < amountWeeks; i++ ) {\r\n        arrAmountWeek.push('');\r\n    }\r\n\r\n    return arrAmountWeek;\r\n}\r\n\r\nexport default WeekTable;\r\n","import React from 'react';\r\nimport CalendarInformation from './CalendarInformation/CalendarInformation';\r\nimport WeekTable from './WeekTable/WeekTable';\r\n\r\nfunction Calendar(props) {\r\n    let { date } = props;\r\n\r\n    date += 2000000000;\r\n\r\n    return(\r\n        <div className=\"ui-datepicker\">\r\n            <CalendarInformation date={date}/>\r\n            <WeekTable date={date}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calendar;","import './App.css';\nimport Calendar from './components/Calendar/Calendar';\n\nconst now = Date.now();\nconsole.log()\n\nfunction App() {\n  return (\n    <Calendar date={now}/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}